{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\PC\\\\Documents\\\\Code\\\\Full-Stack-MERN\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\PC\\\\Documents\\\\Code\\\\Full-Stack-MERN\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import*as api from'../api';// Action Creators\nexport var getPosts=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$api$fetchPosts,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return api.fetchPosts();case 3:_yield$api$fetchPosts=_context.sent;data=_yield$api$fetchPosts.data;dispatch({type:'FETCH_ALL',payload:data});_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.log(_context.t0.message);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function getPosts(_x){return _ref.apply(this,arguments);};}();export var createPost=function createPost(post){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var _yield$api$createPost,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return api.createPost(post);case 3:_yield$api$createPost=_context2.sent;data=_yield$api$createPost.data;dispatch({type:'CREATE',payload:data});_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,8]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var updatePost=function updatePost(id,post){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var _yield$api$updatePost,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return api.updatePost(id,post);case 3:_yield$api$updatePost=_context3.sent;data=_yield$api$updatePost.data;dispatch({type:'UPDATE',payload:data});_context3.next=11;break;case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0.message);case 11:case\"end\":return _context3.stop();}}},_callee3,null,[[0,8]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};","map":{"version":3,"sources":["C:/Users/PC/Documents/Code/Full-Stack-MERN/client/src/actions/posts.js"],"names":["api","getPosts","dispatch","fetchPosts","data","type","payload","console","log","message","createPost","post","updatePost","id"],"mappings":"mWAAA,MAAO,GAAKA,CAAAA,GAAZ,KAAqB,QAArB,CAEA;AACA,MAAO,IAAMC,CAAAA,QAAQ,0FAAG,iBAAOC,QAAP,uLAGOF,CAAAA,GAAG,CAACG,UAAJ,EAHP,4CAGRC,IAHQ,uBAGRA,IAHQ,CAKhBF,QAAQ,CAAC,CAACG,IAAI,CAAE,WAAP,CAAoBC,OAAO,CAAEF,IAA7B,CAAD,CAAR,CALgB,+EAQhBG,OAAO,CAACC,GAAR,CAAY,YAAMC,OAAlB,EARgB,oEAAH,kBAARR,CAAAA,QAAQ,4CAAd,CAYP,MAAO,IAAMS,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,kGAAU,kBAAOT,QAAP,6LAELF,CAAAA,GAAG,CAACU,UAAJ,CAAeC,IAAf,CAFK,6CAEpBP,IAFoB,uBAEpBA,IAFoB,CAI5BF,QAAQ,CAAE,CAAEG,IAAI,CAAE,QAAR,CAAkBC,OAAO,CAAEF,IAA3B,CAAF,CAAR,CAJ4B,mFAM5BG,OAAO,CAACC,GAAR,eAN4B,sEAAV,kEAAnB,CAUP,MAAO,IAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,EAAD,CAAKF,IAAL,kGAAc,kBAAOT,QAAP,6LAETF,CAAAA,GAAG,CAACY,UAAJ,CAAeC,EAAf,CAAmBF,IAAnB,CAFS,6CAExBP,IAFwB,uBAExBA,IAFwB,CAIhCF,QAAQ,CAAC,CAAEG,IAAI,CAAE,QAAR,CAAkBC,OAAO,CAAEF,IAA3B,CAAD,CAAR,CAJgC,mFAMhCG,OAAO,CAACC,GAAR,CAAY,aAAMC,OAAlB,EANgC,sEAAd,kEAAnB","sourcesContent":["import * as api from '../api';\r\n\r\n// Action Creators\r\nexport const getPosts = async (dispatch) => {\r\n\r\n    try{\r\n        const { data } = await api.fetchPosts();\r\n        \r\n        dispatch({type: 'FETCH_ALL', payload: data});\r\n\r\n    } catch (error) {\r\n        console.log(error.message)\r\n    }   \r\n}\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createPost(post);\r\n\r\n        dispatch( { type: 'CREATE', payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updatePost(id, post);\r\n\r\n        dispatch({ type: 'UPDATE', payload: data });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}